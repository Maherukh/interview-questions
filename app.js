//Problem - 1
/// Given an enumerable of strings, attempt to parse each string and if
/// it is an integer, add it to the returned enumerable.

let arr = ["123", "hello", "234"];
function extractNumbers(arr) {
    let answerArr = [];
    for(let i of arr) {
        if(!isNaN(i)) 
            answerArr.push(i);
    }
    console.log(answerArr);
}
extractNumbers(arr);

/// Given two enumerables of strings, find the longest common word.

let arr1 = [
    "love",
   "wandering",
   "goofy",
    "sweet",
    "mean",
    "show",
    "fade",
    "scissors",
    "shoes",
    "gainful",
    "wind",
    "warn"
];
let arr2 = [
    "wacky",
    "fabulous",
    "arm",
    "rabbit",
    "force",
    "wandering",
    "scissors",
   "fair",
    "homely",
    "wiggly",
    "thankful",
    "ear"
];

function longestCommonWord(arr1, arr2) {
    let answerArr = [];
    let answer;
    //finding common words
    for(let i = 0; i < arr1.length; i++) {
        for(let j = 0; j < arr2.length; j++) {
            if(arr1[i].length === arr2[j].length && arr1[i] === arr2[j]) {
                if(!answerArr.includes(arr1[i]))
                    answerArr.push(arr1[i]);
            }
        }
    }
    //finding the largest word
    for(let i = 0; i < answerArr.length; i++) {
        answer = answerArr[0];
        if(answer.length < answerArr[i].length)
            answer = answerArr[i];
    }
    console.log(answer)
}

longestCommonWord(arr1, arr2);

/// Write a function that converts kilometers to miles, given that there are 1.6 kilometers per mile.
function distanceInMiles(num) {
    console.log(num/1.6);
}
distanceInMiles(16);

/// Write a function that converts miles to kilometers, give that there are 1.6 kilometers per mile.
function distanceInKm(num) {
    console.log(num * 1.6);
}
distanceInKm(10);

/// Write a function that returns true if the word is a palindrome, false if it is not.
function isPalindrome(str) {
    let palindrome = str.split("").reverse().join("");
    if(palindrome.toLowerCase() === str.toLowerCase())
        console.log(true)
    else
        console.log(false)
}
isPalindrome("bolton");
isPalindrome("Anna");

/// Write a function that takes an enumerable list of objects and shuffles them into a different order.
function shuffle(array) {
    var currentIndex = array.length, temporaryValue, randomIndex;
    while (0 !== currentIndex) {
      randomIndex = Math.floor(Math.random() * currentIndex);
      currentIndex -= 1;
      temporaryValue = array[currentIndex];
      array[currentIndex] = array[randomIndex];
      array[randomIndex] = temporaryValue;
    }
    console.log(array);
  }
shuffle(["one", "two"]);

/// Write a function that sorts an array of integers into ascending order - do not use any built in sorting mechanisms or frameworks.

function bubbleSort(array) {
    //can do this with sort and swap functions but doing it here in one
    var done = false;
    while (!done) {
      done = true;
      for (var i = 1; i < array.length; i += 1) {
        if (array[i - 1] > array[i]) {
          done = false;
          var tmp = array[i - 1];
          array[i - 1] = array[i];
          array[i] = tmp;
        }
      }
    }
    console.log(array);
  }
bubbleSort([1,3,5,4,2]);

/// Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
/// By considering the terms in the Fibonacci sequence whose values do
/// not exceed four million, find the sum of the even-valued terms.
function fibonacciSum(num) {
    let prevNumber = 0;
    let currNumber = 1;
    let result = 0;
    while (currNumber <= num) {
    if (currNumber % 2 === 0) 
        result += currNumber;
    currNumber += prevNumber;
    prevNumber = currNumber - prevNumber;
  }
  console.log(result);
}
fibonacciSum(4_000_000);

/// Generate a list of integers from 1 to 100.

const generateList = () => {
	var list = new Array();
	var funcs  = new Array();
	for (let i = 1; i <= 100; i++) {
		funcs.push(function(){
			list.push(i);
		});
	};
	funcs.map((f) => f());
	console.log(list);
};

generateList();

module.exports = {
	extractNumbers 		: extractNumbers,
	longestCommonWord 	: longestCommonWord,
	distanceInMiles 	: distanceInMiles,
	distanceInKm 		: distanceInKm,
	isPalindrome 		: isPalindrome,
	shuffle 			: shuffle,
	bubbleSort 			: bubbleSort,
	fibonacciSum 		: fibonacciSum,
	generateList 		: generateList
};